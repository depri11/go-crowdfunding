[1mdiff --git a/campaign/entity.go b/campaign/entity.go[m
[1mindex 1db1c4a..b51b122 100644[m
[1m--- a/campaign/entity.go[m
[1m+++ b/campaign/entity.go[m
[36m@@ -1 +1,28 @@[m
[31m-package campaign[m
\ No newline at end of file[m
[32m+[m[32mpackage campaign[m
[32m+[m
[32m+[m[32mimport "time"[m
[32m+[m
[32m+[m[32mtype Campaign struct {[m
[32m+[m	[32mID               int[m
[32m+[m	[32mUserID           int[m
[32m+[m	[32mName             string[m
[32m+[m	[32mShortDescription string[m
[32m+[m	[32mDescription      string[m
[32m+[m	[32mPerks            string[m
[32m+[m	[32mBackerCount      int[m
[32m+[m	[32mGoalAmount       int[m
[32m+[m	[32mCurrentAmount    int[m
[32m+[m	[32mSlug             string[m
[32m+[m	[32mCreatedAt        time.Time[m
[32m+[m	[32mUpdatedAt        time.Time[m
[32m+[m	[32mCampaignImages []CampaignImage[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype CampaignImage struct {[m
[32m+[m	[32mID int[m
[32m+[m	[32mCampaignID int[m
[32m+[m	[32mFileName string[m
[32m+[m	[32mIsPrimary int[m
[32m+[m	[32mCreatedAt time.Time[m
[32m+[m	[32mUpdatedAt time.Time[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/campaign/repository.go b/campaign/repository.go[m
[1mindex 1db1c4a..d52058b 100644[m
[1m--- a/campaign/repository.go[m
[1m+++ b/campaign/repository.go[m
[36m@@ -1 +1,38 @@[m
[31m-package campaign[m
\ No newline at end of file[m
[32m+[m[32mpackage campaign[m
[32m+[m
[32m+[m[32mimport "gorm.io/gorm"[m
[32m+[m
[32m+[m[32mtype Repository interface {[m
[32m+[m	[32mFindAll() ([]Campaign, error)[m
[32m+[m	[32mFindByUserID(userID int) ([]Campaign, error)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype repository struct {[m
[32m+[m	[32mdb *gorm.DB[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc NewRepository(db *gorm.DB) *repository {[m
[32m+[m	[32mreturn &repository{db}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (r *repository) FindAll() ([]Campaign, error) {[m
[32m+[m	[32mvar campaigns []Campaign[m
[32m+[m[41m	[m
[32m+[m	[32merr := r.db.Preload("CampaignImages", "campaign_images.is_primary = 1").Find(&campaigns).Error[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn campaigns, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn campaigns, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (r *repository) FindByUserID(userID int) ([]Campaign, error) {[m
[32m+[m	[32mvar campaigns []Campaign[m
[32m+[m
[32m+[m	[32merr := r.db.Where("user_id = ?", userID).Preload("CampaignImages", "campaign_images.is_primary = 1").Find(&campaigns).Error[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn campaigns, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn campaigns, nil[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/handler/campaign.go b/handler/campaign.go[m
[1mindex cd97792..5ff6cc5 100644[m
[1m--- a/handler/campaign.go[m
[1m+++ b/handler/campaign.go[m
[36m@@ -1 +1,7 @@[m
[31m-package handler[m
\ No newline at end of file[m
[32m+[m[32mpackage handler[m
[32m+[m
[32m+[m[32m//tangkap parameter[m
[32m+[m[32m//handler ke service[m
[32m+[m[32m//service yang menentukan apakah repository mana yang di-call[m
[32m+[m[32m//repository : FindAll, FindByUserID[m
[32m+[m[32m//db[m
\ No newline at end of file[m
[1mdiff --git a/main.go b/main.go[m
[1mindex 727dcf4..87a3d12 100644[m
[1m--- a/main.go[m
[1m+++ b/main.go[m
[36m@@ -1,11 +1,13 @@[m
 package main[m
 [m
 import ([m
[32m+[m	[32m"fmt"[m
 	"log"[m
 	"net/http"[m
 	"strings"[m
 [m
 	"github.com/depri11/go-crowdfunding/auth"[m
[32m+[m	[32m"github.com/depri11/go-crowdfunding/campaign"[m
 	"github.com/depri11/go-crowdfunding/handler"[m
 	"github.com/depri11/go-crowdfunding/helper"[m
 	"github.com/depri11/go-crowdfunding/user"[m
[36m@@ -24,6 +26,24 @@[m [mfunc main() {[m
 	}[m
 [m
 	userRepository := user.NewRepository(db)[m
[32m+[m	[32mcampaignRepository := campaign.NewRepository(db)[m
[32m+[m
[32m+[m	[32mcampaigns, err := campaignRepository.FindByUserID(14)[m
[32m+[m
[32m+[m	[32mfmt.Println("debug")[m
[32m+[m	[32mfmt.Println("debug")[m
[32m+[m	[32mfmt.Println("debug")[m
[32m+[m	[32mfmt.Println(len(campaigns))[m
[32m+[m	[32mfor _, campaign := range campaigns {[m
[32m+[m		[32mfmt.Println(campaign.Name)[m
[32m+[m		[32mif len(campaign.CampaignImages) > 0 {[m
[32m+[m			[32mfmt.Println("Jumlah gambar")[m
[32m+[m			[32mfmt.Println(len(campaign.CampaignImages))[m
[32m+[m			[32mfmt.Println(campaign.CampaignImages[0].FileName)[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
 	userService := user.NewService(userRepository)[m
 	authService := auth.NewService()[m
 [m
[36m@@ -65,7 +85,7 @@[m [mfunc authMiddleware(authService auth.Service, userService user.Service) gin.Hand[m
 		}[m
 [m
 		claim, ok := token.Claims.(jwt.MapClaims)[m
[31m-		[m
[32m+[m
 		if !ok || !token.Valid{[m
 			response := helper.APIResponse("Unauthorized", http.StatusUnauthorized, "error", nil)[m
 			c.AbortWithStatusJSON(http.StatusUnauthorized, response)[m
